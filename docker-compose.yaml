version: '3.2'
services:
  api:
    container_name: api
    restart: always
    image: 938875074697.dkr.ecr.eu-west-3.amazonaws.com/lichen
    depends_on:
      - db
    volumes:
      - ./public/images:/usr/lichen/public/images
    environment:
      - NODE_ENV=production
    ports:
      - 9000:9000

  api-staging:
    container_name: api-staging
    restart: always
    image: 938875074697.dkr.ecr.eu-west-3.amazonaws.com/lichen
    depends_on:
      - db
    volumes:
      - ./public-staging/images:/usr/lichen/public/images
    ports:
      - 9100:9100
    environment:
      - NODE_ENV=staging

  web:
    container_name: web
    restart: always
    image: 938875074697.dkr.ecr.eu-west-3.amazonaws.com/lichen-web
    ports:
      - 8081:8081
    environment:
      - NODE_ENV=production
      - PORT=8081

  
  web-staging:
    container_name: web-staging
    restart: always
    image: 938875074697.dkr.ecr.eu-west-3.amazonaws.com/lichen-web
    ports:
      - 8082:8082
    environment:
      - NODE_ENV=staging
      - PORT=8082

  webserver:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    restart: always
    depends_on:
      - api
      - web
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  db:
    container_name: postgres
    image: postgres
    ports:
      - '5432:5432'
    volumes:
      - ./database-data:/var/lib/postgresql/data
      - './letsencrypt:/letsencrypt'
    environment:
      - POSTGRES_PASSWORD=psql
      - POSTGRES_USER=postgres